---
import Layout from '../layouts/Layout.astro';
import fs from 'fs';
import path from 'path';

// Extract tags from blog posts
const blogDir = path.join(process.cwd(), 'src/content/blog');
const blogFiles = fs.readdirSync(blogDir).filter(file => file.endsWith('.md'));

const blogTags = new Map();

blogFiles.forEach(file => {
  const content = fs.readFileSync(path.join(blogDir, file), 'utf-8');
  const frontmatterMatch = content.match(/^---([\s\S]*?)---/);
  
  if (frontmatterMatch) {
    const frontmatter = frontmatterMatch[1];
    const tagsMatch = frontmatter.match(/tags:\s*\[(.*?)\]/);
    
    if (tagsMatch) {
      const tags = tagsMatch[1].split(',').map(tag => tag.replace(/"/g, '').trim());
      const title = frontmatter.match(/title:\s*"([^"]+)"/)?.[1] || file.replace('.md', '');
      const slug = file.replace('.md', '');
      
      tags.forEach(tag => {
        if (!blogTags.has(tag)) {
          blogTags.set(tag, []);
        }
        blogTags.get(tag).push({ title, slug, type: 'blog' });
      });
    }
  }
});

// Create thematic project groupings
const projectThemes = new Map();

// JavaScript/Framework projects
projectThemes.set('javascript', [
  { title: 'Embryo.js', type: 'project', description: 'Embryonic Programming framework' },
  { title: 'jspm-react-boilerplate', type: 'project', description: 'JSPM/React template' },
  { title: 'Ejecta', type: 'project', description: 'JavaScript for iOS' }
]);

// UI/Interface projects  
projectThemes.set('interface', [
  { title: 'app-UI', type: 'project', description: 'UI components collection' },
  { title: 'emilyandchris.wedding', type: 'project', description: 'Wedding website' }
]);

// Recent AI/Web experiments
projectThemes.set('ai-tools', [
  { title: 'mcp-chat', type: 'project', description: 'Chat application' },
  { title: 'contextual', type: 'project', description: 'Context management' },
  { title: 'websim', type: 'content', description: 'AI web creation exploration' }
]);

// Development tools
projectThemes.set('dev-tools', [
  { title: 'testler', type: 'project', description: 'Testing tool' },
  { title: 'torrent-peek', type: 'project', description: 'Torrent utility' },
  { title: 'lambda-sqlite-efs', type: 'project', description: 'AWS Lambda SQLite' }
]);

// Sort tags alphabetically
const sortedBlogTags = new Map([...blogTags.entries()].sort());
const sortedProjectThemes = new Map([...projectThemes.entries()].sort());
---

<Layout title="Topics & Tags - Christopher de Beer">
  <main class="content-container">
    <header class="tags-header">
      <h1>Topics & Tags</h1>
      <p class="subtitle">Explore content by theme and topic</p>
      <nav class="breadcrumb">
        <a href="/">Home</a> â†’ <span>Topics</span>
      </nav>
    </header>

    <section class="tags-section">
      <h2>Blog Post Tags</h2>
      <div class="tags-grid">
        {Array.from(sortedBlogTags).map(([tag, posts]) => (
          <div class="tag-group">
            <h3 class="tag-name">#{tag}</h3>
            <ul class="tag-posts">
              {posts.map((post: {title: string, slug: string, type: string}) => (
                <li>
                  <a href={`/blog/${post.slug}/`}>{post.title}</a>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </section>

    <section class="themes-section">
      <h2>Project Themes</h2>
      <div class="themes-grid">
        {Array.from(sortedProjectThemes).map(([theme, items]) => (
          <div class="theme-group">
            <h3 class="theme-name">{theme.replace('-', ' & ')}</h3>
            <ul class="theme-items">
              {items.map((item: {title: string, type: string, description: string}) => (
                <li>
                  {item.type === 'project' ? (
                    <span>
                      <strong>{item.title}</strong> - {item.description}
                    </span>
                  ) : (
                    <a href={`/websim/`}>{item.title}</a>
                  )}
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </section>

    <footer class="tags-footer">
      <p>
        Browse all <a href="/blog/">articles</a> and <a href="/projects/">projects</a>, 
        or return to the <a href="/">home</a> page.
      </p>
    </footer>
  </main>
</Layout>

<style>
  .tags-header {
    text-align: center;
    margin-bottom: 3rem;
    border-bottom: 1px solid var(--border);
    padding-bottom: 2rem;
  }
  
  .tags-header h1 {
    font-size: 2.2em;
    margin-bottom: 0.5rem;
    font-weight: 400;
    color: var(--text-primary);
  }
  
  .subtitle {
    font-size: 1.1em;
    color: var(--text-secondary);
    font-style: italic;
    margin: 0 0 1rem 0;
  }
  
  .breadcrumb {
    font-size: 0.9em;
    color: var(--text-secondary);
  }
  
  .breadcrumb a {
    color: var(--accent);
    text-decoration: none;
  }
  
  .tags-section, .themes-section {
    margin-bottom: 3rem;
  }
  
  .tags-section h2, .themes-section h2 {
    font-size: 1.6em;
    margin-bottom: 1.5rem;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border);
    padding-bottom: 0.5rem;
  }
  
  .tags-grid, .themes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
  }
  
  .tag-group, .theme-group {
    border: 1px solid var(--border);
    padding: 1.25rem;
    background: var(--background-subtle);
  }
  
  .tag-name, .theme-name {
    font-size: 1.1em;
    margin: 0 0 0.75rem 0;
    color: var(--accent);
    font-weight: 500;
    text-transform: capitalize;
  }
  
  .tag-posts, .theme-items {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  
  .tag-posts li, .theme-items li {
    margin-bottom: 0.4rem;
    font-size: 0.95em;
    line-height: 1.4;
  }
  
  .tag-posts a, .theme-items a {
    color: var(--text-primary);
    text-decoration: none;
  }
  
  .tag-posts a:hover, .theme-items a:hover {
    color: var(--accent);
    text-decoration: underline;
  }
  
  .tags-footer {
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border);
    color: var(--text-secondary);
  }
  
  .tags-footer a {
    color: var(--accent);
    text-decoration: none;
  }
  
  .tags-footer a:hover {
    text-decoration: underline;
  }
  
  @media (max-width: 768px) {
    .tags-grid, .themes-grid {
      grid-template-columns: 1fr;
    }
    
    .tags-header h1 {
      font-size: 1.8em;
    }
  }
</style>