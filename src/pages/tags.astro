---
import Layout from '../layouts/Layout.astro';
import fs from 'fs';
import path from 'path';

// Extract tags from blog posts to understand emergent themes
const blogDir = path.join(process.cwd(), 'src/content/blog');
const blogFiles = fs.readdirSync(blogDir).filter(file => file.endsWith('.md'));

const emergentTopics = new Map();

blogFiles.forEach(file => {
  const content = fs.readFileSync(path.join(blogDir, file), 'utf-8');
  const frontmatterMatch = content.match(/^---([\s\S]*?)---/);
  
  if (frontmatterMatch) {
    const frontmatter = frontmatterMatch[1];
    const tagsMatch = frontmatter.match(/tags:\s*\[(.*?)\]/);
    
    if (tagsMatch) {
      const tags = tagsMatch[1].split(',').map(tag => tag.replace(/"/g, '').trim());
      const title = frontmatter.match(/title:\s*"([^"]+)"/)?.[1] || file.replace('.md', '');
      const slug = file.replace('.md', '');
      
      tags.forEach(tag => {
        if (!emergentTopics.has(tag)) {
          emergentTopics.set(tag, []);
        }
        emergentTopics.get(tag).push({ title, slug, type: 'blog' });
      });
    }
  }
});

// Sort by frequency (most connected topics first) - natural emergence
const sortedTopics = new Map([...emergentTopics.entries()].sort((a, b) => b[1].length - a[1].length));
---

<Layout title="Emergent Themes - Christopher de Beer">
  <main class="content-container">
    <header class="themes-header">
      <h1>Emergent Themes</h1>
      <p class="subtitle">Ideas that have grown and connected naturally through writing and exploration</p>
    </header>

    <section class="narrative-intro">
      <p>This page represents the organic clustering of ideas as they've emerged through my writing. Rather than imposing rigid categories, these themes have naturally surfaced through the process of exploration and documentation. The most connected ideas appear first—not by design, but through genuine interconnection.</p>
      
      <p>This is what a digital garden looks like when it's allowed to grow naturally: patterns emerge, connections form, and structure reveals itself through use rather than predetermined organization.</p>
    </section>

    <section class="emergent-clusters">
      {Array.from(sortedTopics).map(([topic, posts]) => (
        <div class="topic-cluster">
          <h2 class="topic-name">
            <span class="connection-count">({posts.length})</span>
            {topic}
          </h2>
          <div class="topic-exploration">
            <p class="cluster-intro">This theme has emerged through {posts.length} piece{posts.length !== 1 ? 's' : ''} of writing, suggesting a natural gravitational pull in my thinking:</p>
            <ul class="connected-content">
              {posts.map((post: {title: string, slug: string, type: string}) => (
                <li>
                  <a href={`/blog/${post.slug}/`}>{post.title}</a>
                  <span class="content-type">({post.type})</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      ))}
    </section>

    <footer class="garden-navigation">
      <p>These connections reveal themselves through the garden's <a href="/blog/">explorations</a> and <a href="/projects/">experiments</a>. Each link strengthens the web of understanding, creating new pathways for discovery.</p>
      
      <p class="meta-note">
        <em>Note: This page demonstrates the shift from rigid categorization to emergent organization—a key principle of digital gardens. The structure you see here wasn't planned; it grew naturally from the content itself.</em>
      </p>
    </footer>
  </main>
</Layout>

<style>
  .themes-header {
    margin-bottom: 3rem;
    text-align: center;
  }
  
  .themes-header h1 {
    font-size: 2.2em;
    margin-bottom: 0.5rem;
    font-weight: 400;
    color: var(--text-primary);
  }
  
  .subtitle {
    font-size: 1.1em;
    color: var(--text-secondary);
    font-style: italic;
    margin: 0;
    line-height: 1.5;
  }
  
  .narrative-intro {
    margin-bottom: 3rem;
    padding: 2rem;
    background: var(--background-subtle);
    border-left: 3px solid var(--accent);
  }
  
  .narrative-intro p {
    font-size: 1.05em;
    line-height: 1.7;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
  }
  
  .narrative-intro p:last-child {
    margin-bottom: 0;
  }
  
  .emergent-clusters {
    margin-bottom: 3rem;
  }
  
  .topic-cluster {
    margin-bottom: 2.5rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border-light);
  }
  
  .topic-cluster:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }
  
  .topic-name {
    font-size: 1.4em;
    margin: 0 0 1rem 0;
    color: var(--text-primary);
    font-weight: 400;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }
  
  .connection-count {
    font-size: 0.7em;
    color: var(--accent);
    font-weight: 500;
    background: var(--background-subtle);
    padding: 0.3rem 0.6rem;
    border-radius: 12px;
    border: 1px solid var(--border);
  }
  
  .topic-exploration {
    margin-left: 1rem;
  }
  
  .cluster-intro {
    font-size: 0.95em;
    color: var(--text-secondary);
    margin-bottom: 1rem;
    font-style: italic;
  }
  
  .connected-content {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  
  .connected-content li {
    margin-bottom: 0.6rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .connected-content a {
    color: var(--text-primary);
    text-decoration: none;
    flex-grow: 1;
  }
  
  .connected-content a:hover {
    color: var(--accent);
    text-decoration: underline;
  }
  
  .content-type {
    font-size: 0.8em;
    color: var(--text-secondary);
    font-style: italic;
  }
  
  .garden-navigation {
    padding-top: 2rem;
    border-top: 1px solid var(--border);
    color: var(--text-secondary);
  }
  
  .garden-navigation p {
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }
  
  .garden-navigation a {
    color: var(--accent);
    text-decoration: none;
  }
  
  .garden-navigation a:hover {
    text-decoration: underline;
  }
  
  .meta-note {
    font-size: 0.9em;
    padding: 1.5rem;
    background: var(--background-subtle);
    border-radius: 4px;
    margin-top: 1rem;
  }
  
  .meta-note em {
    color: var(--text-secondary);
  }
  
  @media (max-width: 768px) {
    .themes-header h1 {
      font-size: 1.8em;
    }
    
    .narrative-intro {
      padding: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .topic-exploration {
      margin-left: 0;
    }
    
    .topic-name {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>