---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const { title, date, description, tags } = post.data;
---

<Layout title={`${title} - Christopher de Beer`}>
  <main>
    <div class="container">
      <article class="post">
        <header class="post-header">
          <h1>{title}</h1>
          <div class="post-meta">
            <time datetime={date.toISOString()}>
              {date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </time>
            {tags && (
              <div class="tags">
                {tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            )}
          </div>
        </header>
        
        <div class="post-content">
          <Content />
        </div>
        
        <footer class="post-footer">
          <a href="/blog/" class="back-link">‚Üê Back to Blog</a>
        </footer>
      </article>
    </div>
  </main>
</Layout>

<style>
  .container {
    max-width: 65ch;
    margin: 0 auto;
    padding: 1rem;
  }

  .post {
    margin-top: 2rem;
  }

  .post-header {
    margin-bottom: 3rem;
    text-align: center;
    border-bottom: 1px solid #e5e5e5;
    padding-bottom: 2rem;
  }

  .post-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #1a1a1a;
    line-height: 1.2;
  }

  .post-meta {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  time {
    font-size: 1rem;
    color: #666;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .tag {
    background: #f0f0f0;
    color: #555;
    padding: 0.3rem 0.8rem;
    border-radius: 0.25rem;
    font-size: 0.85rem;
    font-weight: 500;
  }

  .post-content {
    line-height: 1.6;
    font-size: 1.1rem;
    margin-bottom: 3rem;
  }

  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #1a1a1a;
  }

  .post-content :global(h1) {
    font-size: 2rem;
  }

  .post-content :global(h2) {
    font-size: 1.6rem;
  }

  .post-content :global(h3) {
    font-size: 1.3rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(img) {
    max-width: 100%;
    height: auto;
    margin: 2rem auto;
    display: block;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .post-content :global(a) {
    color: #0066cc;
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: border-color 0.2s ease;
  }

  .post-content :global(a:hover) {
    border-bottom-color: #0066cc;
  }

  .post-content :global(code) {
    background: #f5f5f5;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.9em;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  }

  .post-content :global(blockquote) {
    border-left: 4px solid #e5e5e5;
    margin: 2rem 0;
    padding-left: 2rem;
    font-style: italic;
    color: #666;
  }

  .post-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e5e5e5;
  }

  .back-link {
    color: #666;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .back-link:hover {
    color: #0066cc;
  }

  @media (max-width: 768px) {
    .container {
      padding: 1rem 0.5rem;
    }

    .post-header h1 {
      font-size: 2rem;
    }

    .post-content {
      font-size: 1rem;
    }

    .post-meta {
      flex-direction: column;
      gap: 0.75rem;
    }
  }
</style>