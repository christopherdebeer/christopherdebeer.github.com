---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import EditButton from '../../components/EditButton.astro';
import Editor from '../../components/Editor.astro';
import { buildBacklinks, generateBacklinksHTML } from '../../utils/backlinks.ts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const { title, date, tags } = post.data;

// Generate backlinks for this blog post
const backlinksData = buildBacklinks();
const currentPagePath = `/blog/${post.slug}`;
const backlinksHTML = generateBacklinksHTML(currentPagePath, backlinksData);

// File path for editing
const filePath = `src/content/blog/${post.slug}.md`;
---

<Layout title={`${title} - Christopher de Beer`}>
  <main>
    <div class="content-container">
      <article class="post">
        <header class="post-header">
          <h1>
            {title}
            <EditButton filePath={filePath} />
          </h1>
          <div class="post-meta">
            <time datetime={date.toISOString()}>
              {date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </time>
            {tags && (
              <div class="tags">
                {tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            )}
          </div>
        </header>
        
        <div class="post-content">
          <Content />
        </div>
        
        <!-- Backlinks section -->
        {backlinksHTML && (
          <div set:html={backlinksHTML} />
        )}
        
        <footer class="post-footer">
          <a href="/blog/" class="back-link">‚Üê Back to Blog</a>
        </footer>
      </article>
    </div>
  </main>
  
  <!-- Editor modal -->
  <Editor content="" filePath={filePath} />
</Layout>

<style>
  .post {
    margin-top: 1rem;
  }

  .post-header {
    margin-bottom: 3rem;
    text-align: center;
    border-bottom: 1px solid var(--border);
    padding-bottom: 2rem;
  }

  .post-header h1 {
    font-size: 2.5em;
    margin-bottom: 1rem;
    color: var(--text-primary);
    line-height: 1.2;
    font-weight: 400;
  }

  .post-meta {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  time {
    font-size: 1em;
    color: var(--text-secondary);
    font-weight: 400;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .tag {
    background: var(--background-subtle);
    color: var(--text-secondary);
    padding: 0.3rem 0.8rem;
    border: 1px solid var(--border-light);
    border-radius: 2px;
    font-size: 0.85em;
    font-weight: 400;
  }

  .post-content {
    line-height: 1.6;
    font-size: 1em;
    margin-bottom: 3rem;
  }

  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4) {
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: var(--text-primary);
    font-weight: 400;
  }

  .post-content :global(h1) {
    font-size: 1.8em;
  }

  .post-content :global(h2) {
    font-size: 1.5em;
  }

  .post-content :global(h3) {
    font-size: 1.2em;
  }

  .post-content :global(p) {
    margin-bottom: 1.3em;
  }

  .post-content :global(img) {
    max-width: 100%;
    height: auto;
    margin: 2.5rem auto;
    display: block;
    border-radius: 2px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .post-content :global(a) {
    color: var(--accent);
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: border-color 0.15s ease;
  }

  .post-content :global(a:hover) {
    border-bottom-color: var(--accent);
  }

  .post-content :global(code) {
    background: var(--background-subtle);
    padding: 0.1em 0.3em;
    border-radius: 2px;
    font-size: 0.9em;
  }

  .post-content :global(blockquote) {
    border-left: 3px solid var(--border);
    margin: 2rem 0;
    padding-left: 1.5rem;
    font-style: italic;
    color: var(--text-secondary);
  }

  .post-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border);
  }

  .back-link {
    color: var(--text-secondary);
    text-decoration: none;
    font-weight: 400;
    transition: color 0.15s ease;
  }

  .back-link:hover {
    color: var(--accent);
  }

  /* Backlinks styling */
  .backlinks {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border);
  }

  .backlinks h2 {
    font-size: 1.3em;
    margin-bottom: 1rem;
    color: var(--text-primary);
    font-weight: 400;
  }

  .backlinks-list {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .backlinks-list li {
    margin-bottom: 0.5rem;
    font-size: 0.95em;
  }

  .backlinks-list a {
    color: var(--accent);
    text-decoration: none;
  }

  .backlinks-list a:hover {
    text-decoration: underline;
  }

  .backlink-type {
    color: var(--text-tertiary);
    font-size: 0.85em;
    font-style: italic;
  }

  @media (max-width: 768px) {
    .post-header h1 {
      font-size: 2em;
    }

    .post-meta {
      flex-direction: column;
      gap: 0.75rem;
    }
  }
</style>